generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model HOD {
  id    Int    @id @default(autoincrement())
  email String @unique
}

model TeamLead {
  id    Int    @id @default(autoincrement())
  email String @unique
  requests ODRequest[] @relation("RequestedBy")
}

model User {
  id       Int        @id @default(autoincrement())
  user_id  String     @unique
  name     String
  email    String     @unique
  sec      String
  year     Int
  requests ODRequest[] @relation("RequestFor")
  counts   Count?     // Relation to Count model
}

model ODRequest {
  id           String   @id @default(uuid())
  date         DateTime @default(now())
  user         User     @relation("RequestFor", fields: [user_id], references: [user_id])
  user_id      String
  reason       String
  description  String
  request_by   TeamLead @relation("RequestedBy", fields: [teamlead_id], references: [id])
  teamlead_id  Int
  status       Int      @default(0)  // 0: pending, 1: approved, -1: rejected
  from_time    DateTime
  to_time      DateTime
  request_type String
  attendance   Boolean  @default(false)
}

model Count {
  id           Int      @id @default(autoincrement())
  user         User     @relation(fields: [email], references: [email])
  email        String   @unique
  stayback_cnt Int      @default(0)
  meeting_cnt  Int      @default(0)
}

model Meeting {
  id         String   @id @default(uuid())
  team       String
  title      String
  from_time  DateTime
  to_time    DateTime
  date       DateTime
  students   String[]
}